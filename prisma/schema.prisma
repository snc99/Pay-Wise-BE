generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

// ENUM UNTUK ROLE ADMIN
enum Role {
  SUPERADMIN
  ADMIN
}

// TABEL ADMIN (untuk login dan otorisasi)
model Admin {
  id        String   @id @default(cuid())
  username  String   @unique    // untuk login
  email     String   @unique    // optional digunakan internal
  name      String
  password  String              // disimpan dalam bentuk hash
  role      Role     @default(ADMIN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// TABEL USERS (pihak yang berutang)
model User {
  id        String   @id @default(cuid())
  name      String
  phone     String   
  address   String
  debts     Debt[]    // relasi ke hutang
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

// TABEL DEBT (pencatatan utang per user, bisa banyak)
model Debt {
  id        String    @id @default(cuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  amount    Decimal   // jumlah utangnya
  date      DateTime
  payments  Payment[] // relasi ke pembayaran
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

// TABEL PAYMENT (pembayaran yang dilakukan user terhadap utangnya)
model Payment {
  id         String   @id @default(cuid())
  debt       Debt     @relation(fields: [debtId], references: [id])
  debtId     String
  amount     Decimal  // nominal yang dibayar
  remaining  Decimal  // sisa utang setelah dibayar
  paidAt     DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  deletedAt  DateTime?
}